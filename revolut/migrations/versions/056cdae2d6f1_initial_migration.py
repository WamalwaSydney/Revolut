"""Initial migration

Revision ID: 056cdae2d6f1
Revises: a1d48a33dca6
Create Date: 2025-07-25 02:25:38.731593

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '056cdae2d6f1'
down_revision = 'a1d48a33dca6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.drop_table('scorecard')
    with op.batch_alter_table('alert', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])

    with op.batch_alter_table('issue', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', sa.String(length=100), nullable=True))
        batch_op.alter_column('created_by',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Integer(),
               postgresql_using='created_by::integer',
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])

    with op.batch_alter_table('official', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ratings', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('average_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('rating_count', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('last_updated', sa.DateTime(), nullable=True))
        batch_op.alter_column('constituency',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)

    with op.batch_alter_table('poll', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])

    with op.batch_alter_table('user_feedback', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Integer(),
               postgresql_using='user_id::integer',
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_feedback', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)

    with op.batch_alter_table('poll', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('created_by')

    with op.batch_alter_table('official', schema=None) as batch_op:
        batch_op.alter_column('constituency',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('last_updated')
        batch_op.drop_column('rating_count')
        batch_op.drop_column('average_score')
        batch_op.drop_column('ratings')

    with op.batch_alter_table('issue', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('created_by',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.drop_column('location')

    with op.batch_alter_table('alert', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('created_by')

    op.create_table('scorecard',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('official_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('official_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('position', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ratings', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('average_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='scorecard_pkey')
    )
    op.drop_table('user_roles')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###