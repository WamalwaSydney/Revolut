"""Add password size

Revision ID: ca1ce1712045
Revises: db012d6c99c5
Create Date: 2025-07-29 12:44:57.080220

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ca1ce1712045'
down_revision = 'db012d6c99c5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('alert', schema=None) as batch_op:
#         batch_op.alter_column('affected_locations',
#                existing_type=postgresql.JSONB(astext_type=sa.Text()),
#                type_=sa.JSON(),
#                existing_nullable=True)

#     with op.batch_alter_table('issue', schema=None) as batch_op:
#         batch_op.alter_column('created_by',
#                existing_type=sa.INTEGER(),
#                type_=sa.String(length=50),
#                existing_nullable=True)
#         batch_op.drop_constraint(batch_op.f('issue_created_by_fkey'), type_='foreignkey')

#     with op.batch_alter_table('official', schema=None) as batch_op:
#         batch_op.alter_column('ratings',
#                existing_type=postgresql.JSONB(astext_type=sa.Text()),
#                type_=sa.JSON(),
#                existing_nullable=True)

#     with op.batch_alter_table('poll', schema=None) as batch_op:
#         batch_op.alter_column('options',
#                existing_type=postgresql.JSONB(astext_type=sa.Text()),
#                type_=sa.JSON(),
#                existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=288),
               existing_nullable=True)

#     with op.batch_alter_table('user_feedback', schema=None) as batch_op:
#         batch_op.add_column(sa.Column('tags', sa.JSON(), nullable=True))
#         batch_op.add_column(sa.Column('is_processed', sa.Boolean(), nullable=True))
#         batch_op.alter_column('user_id',
#                existing_type=sa.INTEGER(),
#                type_=sa.String(length=50),
#                existing_nullable=True)
#         batch_op.alter_column('gender',
#                existing_type=sa.VARCHAR(length=20),
#                type_=sa.String(length=10),
#                existing_nullable=True)
#         batch_op.drop_constraint(batch_op.f('user_feedback_user_id_fkey'), type_='foreignkey')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_feedback', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('user_feedback_user_id_fkey'), 'user', ['user_id'], ['id'])
        batch_op.alter_column('gender',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.drop_column('is_processed')
        batch_op.drop_column('tags')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=288),
               type_=sa.VARCHAR(length=128),
               existing_nullable=True)

    with op.batch_alter_table('poll', schema=None) as batch_op:
        batch_op.alter_column('options',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)

    with op.batch_alter_table('official', schema=None) as batch_op:
        batch_op.alter_column('ratings',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('issue', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('issue_created_by_fkey'), 'user', ['created_by'], ['id'])
        batch_op.alter_column('created_by',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('alert', schema=None) as batch_op:
        batch_op.alter_column('affected_locations',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    # ### end Alembic commands ###
